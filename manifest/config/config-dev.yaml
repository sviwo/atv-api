server:
  address: ":8000"
  openapiPath: "/api.json"
  swaggerPath: "/swagger"
  clientMaxBodySize: "10MB"

logger:
  path: "./logs/server/"          # 日志文件路径。默认为空，表示关闭，仅输出到终端
  file: "{Y-m-d}.log"             # 日志文件格式。默认为"{Y-m-d}.log"
  level: "DEV"                    # 日志输出级别
  stdout: true                    # 日志是否同时输出到终端。默认true
  rotateSize: "100M"              # 按照日志文件大小对文件进行滚动切分。默认为0，表示关闭滚动切分特性
  rotateBackupLimit: 10           # 按照切分的文件数量清理切分文件，当滚动切分特性开启时有效。默认为0，表示不备份，切分则删除
  rotateBackupExpire: "15d"       # 按照切分的文件有效期清理切分文件，当滚动切分特性开启时有效。默认为0，表示不备份，切分则删除
  rotateBackupCompress: 5         # 滚动切分文件的压缩比（0-9）。默认为0，表示不压缩。压缩级别设置得越高，会更多使用CPU资源
  writerColorEnable: true         # 日志文件是否带上颜色。默认false，表示不带颜色

database:
  logger:
    - path: "./logs/sql"
      level: "all"
      stdout: true
  default:
    - link: "mysql:root:gyc1993@tcp(114.115.135.233:3306)/sviwo?loc=Local&parseTime=true" #数据库url配置
      role: "master"
      debug: true

redis:
  default:
    address: 114.115.135.233:7001 #redis地址
    db: 1 #db
    pass: sviwo-987dfsdrf6g46sd7q9we4sd6a5 #密码
  cache:
    address: 114.115.135.233:7001  #地址
    db: 1   #db
    pass: sviwo-987dfsdrf6g46sd7q9we4sd6a5 #密码

gfToken:
  ServerName: "Sviwo"
  cacheKey: "gfToken:"   #缓存前缀
  timeOut: 24 * 60 * 60 * 1000 * 10         #token超时时间（毫秒）
  multiLogin: true      #是否允许一个账号多人同时登录
  encryptKey: "49c54195e750b04e74a8429b17896586"    #加密key (32位)
  cacheMode: 2          #存储引擎 1 gcache 2 gredis 默认1
  LoginPath: "/login"
  LogoutPath: "/logout"

email:
  host: smtp.gmail.com
  port: 587
  username: gouyichuan@gmail.com
  password: yzdkzxemdknngznw

#这个mqtt客户端主要是服务端内部处理消息使用的通道
mqtt:
  addr: 114.115.135.233:1883
  # 最好带上服务名称，变成唯一id
  clientId: sviwo-iot-open-001
  deviceLiveDuration: 30
#  auth:
#    userName: admin
#    userPassWorld: 123456

# 时序数据库配置
tsd:
  database: "TdEngine" #可选择 TdEngine、Influxdb
  tdengine:
    #  type: "taosRestful" #http连接方式，端口是6041
    #  dsn: "root:taosdata@http(127.0.0.1:6041)/"
    type: "taosWS" #http连接方式，端口是6041
    dsn: "root:taosdata@ws(114.115.135.233:6041)/"
    dbName: "sviwo_iot"
    maxOpenConns: 2000
    maxIdleConns: 80
  influxdb:
    addr: "http://localhost:8086"
    org: "sviwo"
    dbName: "sviwo_iot"
    token: "ez4BQ5QQCUpcAp1FDhhdY9jfcvxq2Z9OLkQSuQG_IPOzE9GvGRHfRm_YYwfuHtCaS7TVefxhEnzCOHi_nGtsCw=="
    userName:
    passWord:
  aggregator: #聚合器配置，用来配置批量写入时的聚合器
    batchSize: 1000 #批处理数
    workers: 100 #工作线程数
    channelBufferSize: 50000  #通道缓冲数
    lingerTime: 100 # 防止数据积压时间，单位毫秒

#阿里云
aliyun:
  accessKeyID: LTAI5tLnA6rbeAnmpMtsh6vE
  accessKeySecret: uE34y1Ccv3U98jHDGMVdRC15s0sQL3
  oss:
    fileUrlPrefix: https://test-sviwo-car-oss.oss-cn-chengdu.aliyuncs.com/
    endpoint: oss-cn-chengdu.aliyuncs.com
    bucket: test-sviwo-car-oss
  amqp:
    clientId: "sviwo-001" #实例ID
    iotInstanceId: "iot-060aapw2" #实例ID
    host: "iot-060aapw2.amqp.iothub.aliyuncs.com"
    consumerGroupId: "4szfGy4iu2TZyCkRvO4J000100"
  iotApi:
    host: "iot.cn-shanghai.aliyuncs.com"

#缓存
cache:
  prefix: "SviwoIot_Sys:" #缓存前缀
  adapter: "redis"                    # 缓存驱动方式，支持：memory|redis|file，不填默认memory
  fileDir: "./storage/cache"         # 文件缓存路径，adapter=file时必填
